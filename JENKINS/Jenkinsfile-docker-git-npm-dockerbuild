pipeline {
    agent any
    
    stages {
        stage('Git checkout') {
            steps {
                git credentialsId: 'github',
                    url: 'git@github.com:jabid021/SOPRA-250217-GIT.git',
                    branch: 'main'
                
                // Permet de stocker les fichiers récupérés via git dans "source-code", qu'on pourra manipuler dans un autre environnement d'exécution
                stash name: 'source-code', includes: '**/*'
            }
        }
        
        stage('In Docker Execution') {
            agent {
                docker {
                    image 'node:lts-bullseye'
                }
            }
            
            stages {
                stage('Dependencies installation') {
                    steps {
                        // Permet de recopier le "source-code" récupéré via git dans l'autre environnement
                        unstash 'source-code'

                        dir('ANGULAR/demo-angular') {
                            sh 'npm install'
                        }
                    }
                }
            
                stage('Angular Build') {
                    steps {
                        dir('ANGULAR/demo-angular') {
                            sh './node_modules/.bin/ng build'
                        }
                    }
                }
            }
        }
        
        stage('Docker Build') {
            steps {
                dir('ANGULAR/demo-angular') {
                    sh 'docker build -t ascadis/ajc-quest:quest-angular-jenkins .'
                }
            }
        }
        
        stage('Docker Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-login', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                    sh 'docker push ascadis/ajc-quest:quest-angular-jenkins'
                }
            }
        }
    }
}